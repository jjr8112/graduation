{"remainingRequest":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\src\\components\\ExamPage.vue?vue&type=style&index=0&id=37b39f04&scoped=true&lang=scss&","dependencies":[{"path":"D:\\code\\exam_system\\exam-vue\\src\\components\\ExamPage.vue","mtime":1648021861058},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoqIHsKICBmb250LXdlaWdodDogODAwOwp9CgouZWwtY29udGFpbmVyIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KCi5zdGFydEV4YW0gewogIGNvbG9yOiAjMTYwZjU4OwogIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCAjZmZkNTUwOwogIGZvbnQtc2l6ZTogMThweDsKICBmb250LXdlaWdodDogNzAwOwogIHBhZGRpbmctYm90dG9tOiAxMHB4Cn0KCi5leGFtVGl0bGUgewogIGZvbnQtc2l6ZTogMThweDsKICBjb2xvcjogI2NiY2FjZjsKICBtYXJnaW4tbGVmdDogMjBweDsKICBmb250LXdlaWdodDogNzAwOwp9CgouZWwtcmFkaW8tZ3JvdXAgbGFiZWwgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiA0MDBweDsKICBwYWRkaW5nOiA0OHB4IDIwcHggMTBweCAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGNkZmU2OwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgc3BhbiB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDUwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsKICAgIGZvbnQtc2l6ZTogMTZweDsKICB9Cn0KCi5lbC1yYWRpby1ncm91cCBsYWJlbDpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NSwgMjQ3LCAyNTApOwp9CgovKuW9k+WJjemAieS4reeahOetlOahiCovCi5hY3RpdmUgewogIGJvcmRlcjogMXB4IHNvbGlkICMxZjkwZmYgIWltcG9ydGFudDsKICBvcGFjaXR5OiAuNTsKfQoKLyrlgZrov4fnmoTpopjnm67nmoTpq5jkuq7popzoibIqLwouZG9uZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDg3LCAxNDgsIDI0Nyk7Cn0KCi8q5pyq5YGa6aKY55uu55qE6auY5Lqu6aKc6ImyKi8KLm5vQW5zd2VyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM4LCAyMzgsIDIzOCk7Cn0KCi8q5b2T5YmN5Zyo5YGa55qE6aKY55uu6auY5Lqu55qE6aKc6ImyKi8KLm9yYW5nZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjEzLCA4MCk7Cn0KCi5udW0gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2Fzc2V0cy9pbWdzL2V4YW1UaXRsZS5wbmcnKSBuby1yZXBlYXQgMTAwJSAxMDAlOwogIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsKICBoZWlnaHQ6IDM3cHg7CiAgd2lkdGg6IDM3cHg7CiAgbGluZS1oZWlnaHQ6IDMwcHg7CiAgY29sb3I6ICNmZmY7CiAgZm9udC1zaXplOiAyMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW4tcmlnaHQ6IDE1cHg7Cn0K"},{"version":3,"sources":["ExamPage.vue"],"names":[],"mappingsiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExamPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\r\n  <el-container v-if=\"show\">\r\n    <el-header style=\"margin-top: 60px\">\r\n      <el-row>\r\n        <el-col :span=\"18\" :offset=\"3\" style=\"border-bottom: 1px solid #f5f5f5\">\r\n          <span class=\"startExam\">开始考试</span>\r\n          <span class=\"examTitle\">距离考试结束还有：</span>\r\n          <span style=\"color: red;font-size: 18px;\">{{ duration | timeFormat }}</span>\r\n          <el-button type=\"warning\" round\r\n                     style=\"background-color: #ffd550;float: right;color: black;font-weight: 800\"\r\n                     @click=\"uploadExamToAdmin\">提交试卷\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-header>\r\n\r\n    <el-main>\r\n      <el-row>\r\n        <el-col :span=\"18\" :offset=\"3\">\r\n          <el-col :span=\"16\">\r\n            <el-card style=\"min-height: 500px\">\r\n              <!--题目信息-->\r\n              <div>\r\n                <i class=\"num\">{{ curIndex+1 }}</i>\r\n                <span v-if=\"questionInfo[curIndex].questionType === 1\">【单选题】</span>\r\n                <span v-else-if=\"questionInfo[curIndex].questionType === 2\">【多选题】</span>\r\n                <span v-else-if=\"questionInfo[curIndex].questionType === 3\">【判断题】</span>\r\n                <span v-else>【简答题】</span>\r\n                <span>{{ questionInfo[curIndex].questionContent}}:</span>\r\n              </div>\r\n              <!--题目中的配图-->\r\n              <img v-for=\"(url, index) in questionInfo[curIndex].images\" :key=\"index\" :src=\"url\" title=\"点击查看大图\" alt=\"题目图片\"\r\n                   style=\"width: 100px;height: 100px;cursor: pointer\" @click=\"showBigImg(url)\">\r\n\r\n              <!--单选 和 判断 的答案列表-->\r\n              <div style=\"margin-top: 25px\"\r\n                   v-show=\"questionInfo[curIndex].questionType === 1 || questionInfo[curIndex].questionType === 3\">\r\n                <div class=\"el-radio-group\">\r\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\r\n                         @click=\"checkSingleAnswer(index)\"\r\n                         :class=\"index === userAnswer[curIndex] ? 'active' : ''\">\r\n                    <span>{{ optionName[index] + '、' + item.answer}}</span>\r\n                    <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\r\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\r\n                         v-if=\"item.images !== null\"\r\n                         v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <!--多选的答案列表-->\r\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 2\">\r\n                <div class=\"el-radio-group\">\r\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\r\n                         @click=\"selectedMultipleAnswer(index)\"\r\n                         :class=\"(userAnswer[curIndex]+'').indexOf(index+'') !== -1? 'active' : ''\">\r\n                    <span>{{ optionName[index] + '、' + item.answer}}</span>\r\n                    <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\r\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\r\n                         v-if=\"item.images !== null\"\r\n                         v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <!--简答题的答案-->\r\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 4\">\r\n                <el-input\r\n                  type=\"textarea\"\r\n                  :rows=\"8\"\r\n                  placeholder=\"请输入答案\"\r\n                  v-model=\"userAnswer[curIndex]\">\r\n                </el-input>\r\n              </div>\r\n\r\n              <!--上一题 下一题-->\r\n              <div style=\"margin-top: 25px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-back\" :disabled=\"curIndex<1\" @click=\"curIndex--\">上一题</el-button>\r\n                <el-button type=\"primary\" icon=\"el-icon-right\" :disabled=\"curIndex>=questionInfo.length-1\"\r\n                           @click=\"curIndex++\">下一题\r\n                </el-button>\r\n              </div>\r\n\r\n            </el-card>\r\n          </el-col>\r\n\r\n          <el-col :span=\"7\" :offset=\"1\">\r\n            <!--答题卡卡片-->\r\n            <el-card>\r\n              <div>\r\n                <p style=\"font-size: 18px;\">答题卡</p>\r\n                <div style=\"margin-top: 25px\">\r\n                  <span\r\n                    style=\"background-color: rgb(238,238,238);padding: 5px 10px 5px 10px;margin-left: 15px\">未作答</span>\r\n                  <span style=\"background-color: rgb(87,148,247);color: white;\r\n                padding: 5px 10px 5px 10px;margin-left: 15px\">已作答</span>\r\n                </div>\r\n              </div>\r\n\r\n              <!--单选的答题卡-->\r\n              <div style=\"margin-top: 25px\">\r\n                <p style=\"font-size: 18px;\">单选题</p>\r\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\r\n                           v-show=\"questionInfo[item-1].questionType === 1\"\r\n                           :class=\"questionInfo[item-1].questionType === 1 && userAnswer[item-1] !== undefined ?\r\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\r\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\r\n                </el-button>\r\n              </div>\r\n\r\n              <!--多选的答题卡-->\r\n              <div style=\"margin-top: 25px\">\r\n                <p style=\"font-size: 18px;\">多选题</p>\r\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\r\n                           v-show=\"questionInfo[item-1].questionType === 2\"\r\n                           :class=\"questionInfo[item-1].questionType === 2 && userAnswer[item-1] !== undefined ?\r\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\r\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\r\n                </el-button>\r\n              </div>\r\n\r\n              <!--判断的答题卡-->\r\n              <div style=\"margin-top: 25px\">\r\n                <p style=\"font-size: 18px;\">判断题</p>\r\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\r\n                           v-show=\"questionInfo[item-1].questionType === 3\"\r\n                           :class=\"questionInfo[item-1].questionType === 3 && userAnswer[item-1] !== undefined ?\r\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\r\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\r\n                </el-button>\r\n              </div>\r\n\r\n              <!--简答的答题卡-->\r\n              <div style=\"margin-top: 25px\">\r\n                <p style=\"font-size: 18px;\">简答题</p>\r\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\r\n                           v-show=\"questionInfo[item-1].questionType === 4\"\r\n                           :class=\"questionInfo[item-1].questionType === 4 && userAnswer[item-1] !== undefined ?\r\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\r\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\r\n                </el-button>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n\r\n        </el-col>\r\n      </el-row>\r\n      <!-- <video id=\"video\" muted=\"muted\" style=\"float:right;position: fixed;top: 80%;left: 85%\" width=\"200px\"\r\n             height=\"200px\" autoplay=\"autoplay\"></video> -->\r\n      <canvas id=\"canvas\" hidden width=\"200px\" height=\"200px\"></canvas>\r\n    </el-main>\r\n    <!--图片回显-->\r\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\r\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\r\n    </el-dialog>\r\n  </el-container>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    name: 'ExamPage',\r\n    data () {\r\n      return {\r\n        //当前考试的信息\r\n        examInfo: {},\r\n        //当前的考试题目\r\n        questionInfo: [\r\n          {\r\n            questionType: ''\r\n          }\r\n        ],\r\n        //当前题目的索引值\r\n        curIndex: 0,\r\n        //控制大图的对话框\r\n        bigImgDialog: false,\r\n        //当前要展示的大图的url\r\n        bigImgUrl: '',\r\n        //用户选择的答案\r\n        userAnswer: [],\r\n        //页面数据加载\r\n        loading: {},\r\n        //页面绘制是否开始\r\n        show: false,\r\n        //答案的选项名abcd数据\r\n        optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\r\n        //考试总时长\r\n        duration: 0,\r\n        //摄像头对象\r\n        mediaStreamTrack: null,\r\n        //诚信照片的url\r\n        takePhotoUrl: [],\r\n        //摄像头是否开启\r\n        cameraOn: false,\r\n      }\r\n    },\r\n    created () {\r\n      this.getExamInfo()\r\n      //页面数据加载的等待状态栏\r\n      this.loading = this.$Loading.service({\r\n        body: true,\r\n        lock: true,\r\n        text: '数据拼命加载中,(*╹▽╹*)',\r\n        spinner: 'el-icon-loading',\r\n      })\r\n      //开启摄像头\r\n      // window.onload = () => {\r\n      //   setTimeout(() => {\r\n      //     this.getCamera()\r\n      //   }, 1000)\r\n\r\n      //   //生成3次时间点截图\r\n      //   let times = []\r\n      //   for (let i = 0; i < 2; i++) {\r\n      //     times.push(Math.ceil(Math.random() * this.duration * 1000))\r\n      //   }\r\n      //   times.push(10000)\r\n      //   //一次考试最多3次随机的诚信截图\r\n      //   times.forEach(item => {\r\n      //     window.setTimeout(() => {\r\n      //       this.takePhoto()\r\n      //     }, item)\r\n      //   })\r\n      // }\r\n    },\r\n    mounted () {\r\n      //关闭浏览器窗口的时候移除 localstorage的时长\r\n      var userAgent = navigator.userAgent //取得浏览器的userAgent字符串\r\n      var isOpera = userAgent.indexOf('Opera') > -1 //判断是否Opera浏览器\r\n      var isIE = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1 && !isOpera //判断是否IE浏览器\r\n      var isIE11 = userAgent.indexOf('rv:11.0') > -1 //判断是否是IE11浏览器\r\n      var isEdge = userAgent.indexOf('Edge') > -1 && !isIE //判断是否IE的Edge浏览器\r\n      if (!isIE && !isEdge && !isIE11) {//兼容chrome和firefox\r\n        var _beforeUnload_time = 0, _gap_time = 0\r\n        var is_fireFox = navigator.userAgent.indexOf('Firefox') > -1//是否是火狐浏览器\r\n        window.onunload = function () {\r\n          _gap_time = new Date().getTime() - _beforeUnload_time\r\n          if (_gap_time <= 5) {\r\n            localStorage.removeItem('examDuration' + this.examInfo.examId)\r\n          } else {//谷歌浏览器刷新\r\n          }\r\n        }\r\n        window.onbeforeunload = function () {\r\n          _beforeUnload_time = new Date().getTime()\r\n          if (is_fireFox) {//火狐关闭执行\r\n\r\n          } else {//火狐浏览器刷新\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      //查询当前考试的信息\r\n      getExamInfo () {\r\n        this.$http.get(this.API.getExamInfoById, { params: this.$route.params }).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            this.examInfo = resp.data.data\r\n            //设置定时(秒)\r\n            if (localStorage.getItem('examDuration' + this.examInfo.examId) === '0') \r\n            localStorage.removeItem('examDuration' + this.examInfo.examId)\r\n            this.duration = localStorage.getItem('examDuration' + this.examInfo.examId) || resp.data.data.examDuration * 60\r\n            console.log(localStorage.getItem('examDuration' + this.examInfo.examId))\r\n            console.log(this.duration)\r\n            //考试剩余时间定时器\r\n            this.timer = window.setInterval(() => {\r\n              if (this.duration > 0) this.duration--\r\n            }, 1000)\r\n            this.getQuestionInfo(resp.data.data.questionIds.split(','))\r\n          }\r\n        })\r\n      },\r\n      //查询考试的题目信息\r\n      async getQuestionInfo (ids) {\r\n        await ids.forEach((item, index) => {\r\n          this.$http.get(this.API.getQuestionById + '/' + item).then((resp) => {\r\n            if (index === 0) this.questionInfo = []\r\n            if (resp.data.code === 200) {\r\n              this.questionInfo.push(resp.data.data)\r\n              //重置问题的顺序 单选 多选 判断 简答\r\n              this.questionInfo = this.questionInfo.sort(function (a, b) {\r\n                return a.questionType - b.questionType\r\n              })\r\n            }\r\n          })\r\n        })\r\n        this.loading.close()\r\n        this.show = true\r\n      },\r\n      //点击展示高清大图\r\n      showBigImg (url) {\r\n        this.bigImgUrl = url\r\n        this.bigImgDialog = true\r\n      },\r\n      //检验单选题的用户选择的答案\r\n      checkSingleAnswer (index) {\r\n        this.$set(this.userAnswer, this.curIndex, index)\r\n      },\r\n      //多选题用户的答案选中\r\n      selectedMultipleAnswer (index) {\r\n        if (this.userAnswer[this.curIndex] === undefined) {//当前是多选的第一个答案\r\n          this.$set(this.userAnswer, this.curIndex, index)\r\n        } else if (String(this.userAnswer[this.curIndex]).split(',').includes(index + '')) {//取消选中\r\n          let newArr = []\r\n          String(this.userAnswer[this.curIndex]).split(',').forEach(item => {\r\n            if (item !== '' + index) newArr.push(item)\r\n          })\r\n          if (newArr.length === 0) {\r\n            this.$set(this.userAnswer, this.curIndex, undefined)\r\n          } else {\r\n            this.$set(this.userAnswer, this.curIndex, newArr.join(','))\r\n            //答案格式化顺序DBAC -> ABCD\r\n            this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\r\n              return a - b\r\n            }).join(',')\r\n          }\r\n        } else if (!((this.userAnswer[this.curIndex] + '').split(',').includes(index + ''))) {//第n个答案\r\n          this.$set(this.userAnswer, this.curIndex, this.userAnswer[this.curIndex] += ',' + index)\r\n          //答案格式化顺序DBAC -> ABCD\r\n          this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\r\n            return a - b\r\n          }).join(',')\r\n        }\r\n      },\r\n      //调用摄像头\r\n      getCamera () {\r\n        let constraints = {\r\n          video: {\r\n            width: 200,\r\n            height: 200\r\n          },\r\n          audio: false\r\n        }\r\n        //获得video摄像头\r\n        let video = document.getElementById('video')\r\n        let promise = navigator.mediaDevices.getUserMedia(constraints)\r\n        promise.then((mediaStream) => {\r\n          this.mediaStreamTrack = typeof mediaStream.stop === 'function' ? mediaStream : mediaStream.getTracks()[1]\r\n          video.srcObject = mediaStream\r\n          video.play()\r\n          this.cameraOn = true\r\n        }).catch((back) => {\r\n          this.$message({\r\n            duration: 1500,\r\n            message: '请开启摄像头权限o(╥﹏╥)o!',\r\n            type: 'error'\r\n          })\r\n        })\r\n      },\r\n      //拍照\r\n      takePhoto () {\r\n        if (this.cameraOn) {//摄像头是否开启 开启了才执行上传信用图片\r\n          //获得Canvas对象\r\n          let video = document.getElementById('video')\r\n          let canvas = document.getElementById('canvas')\r\n          let ctx = canvas.getContext('2d')\r\n          ctx.drawImage(video, 0, 0, 200, 200)\r\n          // toDataURL  ---  可传入'image/png'---默认, 'image/jpeg'\r\n          let img = document.getElementById('canvas').toDataURL()\r\n\r\n          //构造post的form表单\r\n          let formData = new FormData()\r\n          //convertBase64UrlToBlob函数是将base64编码转换为Blob\r\n          formData.append('file', this.base64ToFile(img, 'examTakePhoto.png'))\r\n          //上传阿里云OSS\r\n          this.$http.post(this.API.uploadQuestionImage, formData).then((resp) => {\r\n            if (resp.data.code === 200) this.takePhotoUrl.push(resp.data.data)\r\n          })\r\n        }\r\n      },\r\n      //关闭摄像头\r\n      closeCamera () {\r\n        let stream = document.getElementById('video').srcObject\r\n        let tracks = stream.getTracks()\r\n        tracks.forEach(function (track) {\r\n          track.stop()\r\n        })\r\n        document.getElementById('video').srcObject = null\r\n      },\r\n      //将摄像头截图的base64串转化为file提交后台\r\n      base64ToFile (urlData, fileName) {\r\n        let arr = urlData.split(',')\r\n        let mime = arr[0].match(/:(.*?);/)[1]\r\n        let bytes = atob(arr[1]) // 解码base64\r\n        let n = bytes.length\r\n        let ia = new Uint8Array(n)\r\n        while (n--) {\r\n          ia[n] = bytes.charCodeAt(n)\r\n        }\r\n        return new File([ia], fileName, { type: mime })\r\n      },\r\n      //上传用户考试信息进入后台\r\n      async uploadExamToAdmin () {\r\n        if (this.cameraOn) await this.takePhoto()//结束的时候拍照上传一张\r\n        // 正则\r\n        var reg = new RegExp('-', 'g')\r\n        // 去掉用户输入的非法分割符号(-),保证后端接受数据处理不报错\r\n        this.userAnswer.forEach((item, index) => {\r\n          if (this.questionInfo[index].questionType === 4) {//简答题答案处理\r\n            this.userAnswer[index] = item.replace(reg, ' ')\r\n          }\r\n        })\r\n\r\n        // 标记题目是否全部做完\r\n        let flag = true\r\n        for (let i = 0; i < this.userAnswer.length; i++) {// 检测用户是否题目全部做完\r\n          if (this.userAnswer[i] === undefined) {\r\n            flag = false\r\n          }\r\n        }\r\n        // 如果用户所有答案的数组长度小于题目长度,这个时候也要将标志位置为false\r\n        if (this.userAnswer.length < this.questionInfo.length) {\r\n          flag = false\r\n        }\r\n        //题目未做完\r\n        if (!flag) {\r\n          // if (this.userAnswer.some((item) => item === undefined)) {\r\n          this.$confirm('当前试题暂未做完, 是否继续提交o(╥﹏╥)o ?', 'Tips', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            let data = {}\r\n            data.questionIds = []\r\n            data.userAnswers = this.userAnswer.join('-')\r\n            this.questionInfo.forEach((item, index) => {\r\n              data.questionIds.push(item.questionId)\r\n              //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\r\n              if (index > (this.userAnswer.length - 1)) {\r\n                data.userAnswers += '- '\r\n              }\r\n            })\r\n            //如果所有题目全部未答\r\n            if (this.userAnswer.length === 0) {\r\n              this.questionInfo.forEach(item => {\r\n                data.userAnswers += ' -'\r\n              })\r\n              data.userAnswers.split(0, data.userAnswers.length - 1)\r\n            }\r\n            data.examId = parseInt(this.$route.params.examId)\r\n            data.questionIds = data.questionIds.join(',')\r\n            data.creditImgUrl = this.takePhotoUrl.join(',')\r\n            this.$http.post(this.API.addExamRecord, data).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: '考试结束 *^▽^*',\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n                this.$router.push('/examResult/' + resp.data.data)\r\n              }\r\n            })\r\n          }).catch(() => {\r\n            this.$notify({\r\n              title: 'Tips',\r\n              message: '继续加油! *^▽^*',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n          })\r\n        } else {//当前题目做完了\r\n          if (this.cameraOn) {\r\n            //结束的时候拍照上传一张\r\n            this.takePhoto()\r\n            this.closeCamera()\r\n          }\r\n          let data = {}\r\n          data.questionIds = []\r\n          data.userAnswers = this.userAnswer.join('-')\r\n          data.examId = parseInt(this.$route.params.examId)\r\n          data.creditImgUrl = this.takePhotoUrl.join(',')\r\n          this.questionInfo.forEach((item, index) => {\r\n            data.questionIds.push(item.questionId)\r\n          })\r\n          data.questionIds = data.questionIds.join(',')\r\n          this.$http.post(this.API.addExamRecord, data).then((resp) => {\r\n            if (resp.data.code === 200) {\r\n              this.$notify({\r\n                title: 'Tips',\r\n                message: '考试结束 *^▽^*',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n              this.$router.push('/examResult/' + resp.data.data)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      //监控考试的剩余时间\r\n      duration (newVal) {\r\n        localStorage.setItem('examDuration' + this.examInfo.examId, newVal)\r\n        //摄像头数据\r\n        // let constraints = {\r\n        //   video: {\r\n        //     width: 200,\r\n        //     height: 200\r\n        //   },\r\n        //   audio: false\r\n        // }\r\n        // //通过调用摄像头判断用户是否中途关闭摄像头\r\n        // let promise = navigator.mediaDevices.getUserMedia(constraints)\r\n        // promise.catch((back) => {\r\n        //   this.cameraOn = false\r\n        // })\r\n        // if (!this.cameraOn) {//如果摄像头未开启,就再次调用开启\r\n        //   this.getCamera()\r\n        // }\r\n        //考试时间结束了提交试卷\r\n        if (newVal < 1) {\r\n          // if (this.cameraOn) {\r\n          //   //结束的时候拍照上传一张\r\n          //   this.takePhoto()\r\n          //   this.closeCamera()\r\n          // }\r\n          let data = {}\r\n          data.questionIds = []\r\n          data.userAnswers = this.userAnswer.join('-')\r\n          this.questionInfo.forEach((item, index) => {\r\n            data.questionIds.push(item.questionId)\r\n            //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\r\n            if (index > this.userAnswer.length) {\r\n              data.userAnswers += ' -'\r\n            }\r\n          })\r\n          //如果所有题目全部未答\r\n          if (data.userAnswers === '') {\r\n            this.questionInfo.forEach(item => {\r\n              data.userAnswers += ' -'\r\n            })\r\n            data.userAnswers.split(0, data.userAnswers.length - 1)\r\n          }\r\n          data.examId = parseInt(this.$route.params.examId)\r\n\r\n          data.questionIds = data.questionIds.join(',')\r\n          data.creditImgUrl = this.takePhotoUrl.join(',')\r\n          this.$http.post(this.API.addExamRecord, data).then((resp) => {\r\n            if (resp.data.code === 200) {\r\n              this.$notify({\r\n                title: 'Tips',\r\n                message: '考试时间结束,已为您自动提交 *^▽^*',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n              this.$router.push('/examResult/' + resp.data.data)\r\n            }\r\n          })\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  * {\r\n    font-weight: 800;\r\n  }\r\n\r\n  .el-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .startExam {\r\n    color: #160f58;\r\n    border-bottom: 4px solid #ffd550;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    padding-bottom: 10px\r\n  }\r\n\r\n  .examTitle {\r\n    font-size: 18px;\r\n    color: #cbcacf;\r\n    margin-left: 20px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .el-radio-group label {\r\n    display: block;\r\n    width: 400px;\r\n    padding: 48px 20px 10px 20px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dcdfe6;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    span {\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  .el-radio-group label:hover {\r\n    background-color: rgb(245, 247, 250);\r\n  }\r\n\r\n  /*当前选中的答案*/\r\n  .active {\r\n    border: 1px solid #1f90ff !important;\r\n    opacity: .5;\r\n  }\r\n\r\n  /*做过的题目的高亮颜色*/\r\n  .done {\r\n    background-color: rgb(87, 148, 247);\r\n  }\r\n\r\n  /*未做题目的高亮颜色*/\r\n  .noAnswer {\r\n    background-color: rgb(238, 238, 238);\r\n  }\r\n\r\n  /*当前在做的题目高亮的颜色*/\r\n  .orange {\r\n    background-color: rgb(255, 213, 80);\r\n  }\r\n\r\n  .num {\r\n    display: inline-block;\r\n    background: url('../assets/imgs/examTitle.png') no-repeat 100% 100%;\r\n    background-size: contain;\r\n    height: 37px;\r\n    width: 37px;\r\n    line-height: 30px;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    margin-right: 15px;\r\n  }\r\n</style>\r\n"]}]}