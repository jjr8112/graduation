{"remainingRequest":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\src\\components\\ExamManage.vue?vue&type=style&index=0&id=0b7892d8&scoped=true&lang=scss&","dependencies":[{"path":"D:\\code\\exam_system\\exam-vue\\src\\components\\ExamManage.vue","mtime":1645680824550},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1jb250YWluZXIgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKfQoKLmVsLWNvbnRhaW5lciB7CiAgYW5pbWF0aW9uOiBsZWZ0TW92ZUluIC43cyBlYXNlLWluOwp9CgpAa2V5ZnJhbWVzIGxlZnRNb3ZlSW4gewogIDAlIHsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7CiAgICBvcGFjaXR5OiAwOwogIH0KICAxMDAlIHsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7CiAgICBvcGFjaXR5OiAxOwogIH0KfQo="},{"version":3,"sources":["ExamManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6PA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExamManage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header height=\"220\">\r\n      <el-select @change=\"typeChange\" clearable v-model=\"queryInfo.examType\" placeholder=\"请选择考试类型\">\r\n        <el-option\r\n          v-for=\"item in examType\"\r\n          :key=\"item.type\"\r\n          :label=\"item.info\"\r\n          :value=\"item.type\">\r\n        </el-option>\r\n      </el-select>\r\n\r\n      <el-date-picker style=\"margin-left: 5px\"\r\n                      v-model=\"queryInfo.startTime\" @change=\"getExamInfo\"\r\n                      type=\"date\"\r\n                      placeholder=\"考试开始时间\">\r\n      </el-date-picker>\r\n\r\n      <el-date-picker style=\"margin-left: 5px\" @change=\"getExamInfo\"\r\n                      v-model=\"queryInfo.endTime\"\r\n                      type=\"date\"\r\n                      placeholder=\"考试结束时间\">\r\n      </el-date-picker>\r\n\r\n      <el-input v-model=\"queryInfo.examName\" placeholder=\"考试名称\" @blur=\"getExamInfo\"\r\n                style=\"margin-left: 5px;width: 220px\"\r\n                prefix-icon=\"el-icon-search\"></el-input>\r\n      <br>\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" style=\"margin-top: 10px\"\r\n                 @click=\"$router.push('/addExam')\">添加\r\n      </el-button>\r\n    </el-header>\r\n\r\n    <el-main>\r\n      <!--操作的下拉框-->\r\n      <el-select @change=\"operationChange\" clearable v-if=\"selectionTable.length !== 0\" v-model=\"operation\"\r\n                 :placeholder=\"'已选择' + selectionTable.length + '项'\" style=\"margin-bottom: 25px;\">\r\n        <el-option v-for=\"(item,index) in operationInfo\" :key=\"index\" :value=\"item.desc\">\r\n          <span style=\"float: left\">{{ item.label }}</span>\r\n          <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.desc }}</span>\r\n        </el-option>\r\n      </el-select>\r\n\r\n      <el-table\r\n        ref=\"questionTable\"\r\n        highlight-current-row\r\n        v-loading=\"loading\"\r\n        :border=\"true\"\r\n        :data=\"examInfo\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%;\" @selection-change=\"handleTableSectionChange\">\r\n\r\n        <el-table-column align=\"center\"\r\n                         type=\"selection\"\r\n                         width=\"55\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"考试名称\">\r\n          <template slot-scope=\"scope\">\r\n            <span style=\"cursor:pointer;color: rgb(24,144,255)\" @click=\"$router.push('/updateExam/'+ scope.row.examId)\">{{ scope.row.examName }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"考试类型\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.type === 1 ? '完全公开' : '需要密码' }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"考试时间\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.startTime !== 'null' && scope.row.endTime !== 'null' ?\r\n            scope.row.startTime + ' ~' + scope.row.endTime : '不限时'}}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" prop=\"totalScore\" label=\"考试总分\"></el-table-column>\r\n\r\n        <el-table-column align=\"center\" prop=\"passScore\" label=\"及格分数\"></el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.status === 1 ? '启用' : '禁用' }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n      </el-table>\r\n\r\n      <!--分页-->\r\n      <el-pagination style=\"margin-top: 25px\"\r\n                     @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"queryInfo.pageNo\"\r\n                     :page-sizes=\"[10, 20, 30, 50]\"\r\n                     :page-size=\"queryInfo.pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </el-main>\r\n\r\n  </el-container>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'ExamManage',\r\n    data () {\r\n      return {\r\n        queryInfo: {\r\n          'examType': null,\r\n          'startTime': null,\r\n          'endTime': null,\r\n          'examName': null,\r\n          'pageNo': 0,\r\n          'pageSize': 10\r\n        },\r\n        //表格是否在加载\r\n        loading: true,\r\n        //考试类型信息\r\n        examType: [\r\n          {\r\n            info: '公开考试',\r\n            type: 1\r\n          },\r\n          {\r\n            info: '需要密码',\r\n            type: 2\r\n          }\r\n        ],\r\n        //被选择的考试的行\r\n        selectionTable: [],\r\n        //表格多行选中的操作信息\r\n        operation: '',\r\n        //支持操作的信息\r\n        operationInfo: [\r\n          {\r\n            'label': '启用',\r\n            'desc': 'on'\r\n          },\r\n          {\r\n            'label': '禁用',\r\n            'desc': 'off'\r\n          },\r\n          {\r\n            'label': '删除',\r\n            'desc': 'delete'\r\n          }\r\n        ],\r\n        //考试信息\r\n        examInfo: [],\r\n        //查询到的考试总数\r\n        total: 0,\r\n\r\n      }\r\n    },\r\n    created () {\r\n      this.getExamInfo()\r\n    },\r\n    methods: {\r\n      //考试类型搜索\r\n      typeChange (val) {\r\n        this.queryInfo.examType = val\r\n        this.getExamInfo()\r\n      },\r\n      //操作多行表格信息\r\n      operationChange (val) {\r\n        let examIds = []\r\n        this.selectionTable.forEach(item => {\r\n          examIds.push(item.examId)\r\n        })\r\n        if (val === 'on') {\r\n          this.$http.get(this.API.operationExam + '/1', { params: { 'ids': examIds.join(',') } }).then((resp) => {\r\n            if (resp.data.code === 200) {\r\n              this.getExamInfo()\r\n              this.$notify({\r\n                'type': 'success',\r\n                'title': 'Tips',\r\n                'message': '操作成功',\r\n                'duration': 2000\r\n              })\r\n            }\r\n          })\r\n        } else if (val === 'off') {\r\n          this.$http.get(this.API.operationExam + '/2', { params: { 'ids': examIds.join(',') } }).then((resp) => {\r\n            if (resp.data.code === 200) {\r\n              this.getExamInfo()\r\n              this.$notify({\r\n                'type': 'success',\r\n                'title': 'Tips',\r\n                'message': '操作成功',\r\n                'duration': 2000\r\n              })\r\n            }\r\n          })\r\n        } else if (val === 'delete') {\r\n          this.$http.get(this.API.operationExam + '/3', { params: { 'ids': examIds.join(',') } }).then((resp) => {\r\n            if (resp.data.code === 200) {\r\n              this.getExamInfo()\r\n              this.$notify({\r\n                'type': 'success',\r\n                'title': 'Tips',\r\n                'message': '操作成功',\r\n                'duration': 2000\r\n              })\r\n            }\r\n          })\r\n        }\r\n      },\r\n      //查询考试信息\r\n      getExamInfo () {\r\n        this.$http.post(this.API.getExamInfo, this.queryInfo).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            resp.data.data.forEach(item => {\r\n              item.startTime = String(item.startTime).substring(0, 10)\r\n              item.endTime = String(item.endTime).substring(0, 10)\r\n            })\r\n            this.examInfo = resp.data.data\r\n            this.getExamTotal()\r\n            this.loading = false\r\n          }\r\n        })\r\n      },\r\n      //查询考试信息\r\n      getExamTotal () {\r\n        let data = JSON.parse(JSON.stringify(this.queryInfo))\r\n        data.pageNo = 1\r\n        data.pageSize = 9999\r\n        this.$http.post(this.API.getExamInfo, data).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            this.total = resp.data.data.length\r\n          }\r\n        })\r\n      },\r\n      //处理表格被选中\r\n      handleTableSectionChange (val) {\r\n        this.selectionTable = val\r\n      },\r\n      //分页页面大小改变\r\n      handleSizeChange (val) {\r\n        this.queryInfo.pageSize = val\r\n        this.getExamInfo()\r\n      },\r\n      //分页插件的页数\r\n      handleCurrentChange (val) {\r\n        this.queryInfo.pageNo = val\r\n        this.getExamInfo()\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .el-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .el-container {\r\n    animation: leftMoveIn .7s ease-in;\r\n  }\r\n\r\n  @keyframes leftMoveIn {\r\n    0% {\r\n      transform: translateX(-100%);\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      transform: translateX(0%);\r\n      opacity: 1;\r\n    }\r\n  }\r\n</style>\r\n"]}]}