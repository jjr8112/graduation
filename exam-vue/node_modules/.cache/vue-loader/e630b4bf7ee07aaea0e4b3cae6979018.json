{"remainingRequest":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\src\\components\\Main.vue?vue&type=template&id=54d3a52e&scoped=true&","dependencies":[{"path":"D:\\code\\exam_system\\exam-vue\\src\\components\\Main.vue","mtime":1647270155208},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}