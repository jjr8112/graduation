{"remainingRequest":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\src\\components\\QuestionManage.vue?vue&type=style&index=0&id=1db03cca&scoped=true&lang=scss&","dependencies":[{"path":"D:\\code\\exam_system\\exam-vue\\src\\components\\QuestionManage.vue","mtime":1646979774965},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWNvbnRhaW5lciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9CgouZWwtaW5wdXQgewogIHdpZHRoOiAyMDBweDsKfQoKLmVsLWNvbnRhaW5lciB7CiAgYW5pbWF0aW9uOiBsZWZ0TW92ZUluIC43cyBlYXNlLWluOwp9CgpAa2V5ZnJhbWVzIGxlZnRNb3ZlSW4gewogIDAlIHsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7CiAgICBvcGFjaXR5OiAwOwogIH0KICAxMDAlIHsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7CiAgICBvcGFjaXR5OiAxOwogIH0KfQoKLnJvbGUgewogIGNvbG9yOiAjNjA2MjY2Owp9CgovZGVlcC8gLmVsLXRhYmxlIHRoZWFkIHsKICBjb2xvcjogcmdiKDg1LCA4NSwgODUpICFpbXBvcnRhbnQ7Cn0KCi8q6KGo5qC855qE5aS06YOo5qC35byPKi8KL2RlZXAvIC5oYXMtZ3V0dGVyIHRyIHRoIHsKICBiYWNrZ3JvdW5kOiByZ2IoMjQyLCAyNDMsIDI0NCk7CiAgY29sb3I6IHJnYig4NSwgODUsIDg1KTsKICBmb250LXdlaWdodDogYm9sZDsKICBsaW5lLWhlaWdodDogMzJweDsKfQoKLmVsLXRhYmxlIHsKICBib3gtc2hhZG93OiAwIDAgMXB4IDFweCBnYWluc2Jvcm87Cn0KCi5xdUNvbnRlbnQgewogIGNvbG9yOiAjNGQ5OWRlOwogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["QuestionManage.vue"],"names":[],"mappingskCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"QuestionManage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-container>\r\n\r\n    <el-header height=\"220\">\r\n      <el-row>\r\n        <el-select @change=\"typeChange\" clearable v-model=\"queryInfo.questionType\" placeholder=\"请选择题目类型\">\r\n          <el-option\r\n            v-for=\"item in questionType\"\r\n            :key=\"item.id\"\r\n            :label=\"item.name\"\r\n            :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-select @change=\"bankChange\" clearable v-model=\"queryInfo.questionBank\" placeholder=\"请选择题库\"\r\n                   style=\"margin-left: 5px\">\r\n          <el-option\r\n            v-for=\"item in allBank\"\r\n            :key=\"item.id\"\r\n            :label=\"item.bankName\"\r\n            :value=\"item.bankName\">\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-input v-model=\"queryInfo.questionContent\" @blur=\"contentChange\" placeholder=\"题目内容\"\r\n                  style=\"margin-left: 5px;width: 220px\"\r\n                  prefix-icon=\"el-icon-search\"></el-input>\r\n      </el-row>\r\n\r\n      <el-row style=\"margin-top: 10px\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"addQuTableVisible = true\">添加</el-button>\r\n      </el-row>\r\n    </el-header>\r\n\r\n    <el-main>\r\n      <!--操作的下拉框-->\r\n      <el-select @change=\"operationChange\" clearable v-if=\"selectionTable.length !== 0\" v-model=\"operation\"\r\n                 :placeholder=\"'已选择' + selectionTable.length + '项'\" style=\"margin-bottom: 25px;\">\r\n\r\n        <el-option v-for=\"(item,index) in optionInfo\" :key=\"index\" :value=\"item.desc\">\r\n          <span style=\"float: left\">{{ item.label }}</span>\r\n          <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.desc }}</span>\r\n        </el-option>\r\n\r\n      </el-select>\r\n\r\n      <el-table\r\n        ref=\"questionTable\"\r\n        highlight-current-row\r\n        v-loading=\"loading\"\r\n        :border=\"true\"\r\n        :data=\"questionInfo\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%;\" @selection-change=\"handleTableSectionChange\">\r\n\r\n        <el-table-column align=\"center\"\r\n                         type=\"selection\"\r\n                         width=\"55\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         label=\"题目类型\">\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.quType === 1\">单选题</span>\r\n            <span v-else-if=\"scope.row.quType === 2\">多选题</span>\r\n            <span v-else-if=\"scope.row.quType === 3\">判断题</span>\r\n            <span v-else-if=\"scope.row.quType === 4\">简答题</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"题目内容\">\r\n          <template slot-scope=\"scope\">\r\n            <span class=\"quContent\" @click=\"updateQu(scope.row.id)\">{{ scope.row.quContent }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         label=\"难度\">\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.level === 1\">简单</span>\r\n            <span v-if=\"scope.row.level === 2\">中等</span>\r\n            <span v-if=\"scope.row.level === 3\">困难</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         prop=\"quBankName\"\r\n                         label=\"所属题库\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         prop=\"createPerson\"\r\n                         label=\"创建人\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         label=\"创建时间\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.createTime }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n\r\n      </el-table>\r\n\r\n      <!--分页-->\r\n      <el-pagination style=\"margin-top: 25px\"\r\n                     @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"queryInfo.pageNo\"\r\n                     :page-sizes=\"[10, 20, 30, 50]\"\r\n                     :page-size=\"queryInfo.pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n\r\n    </el-main>\r\n\r\n    <el-dialog title=\"更新题目\" :visible.sync=\"updateQuTableVisible\" width=\"50%\" center>\r\n      <el-card>\r\n\r\n        <el-form :model=\"updateQuForm\" ref=\"updateQuForm\" :rules=\"updateQuFormRules\">\r\n\r\n          <el-form-item label=\"题目类型\" label-width=\"120px\" prop=\"questionType\">\r\n            <el-select v-model=\"updateQuForm.questionType\" disabled @change=\"updateQuForm.answer =  []\"\r\n                       placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in questionType\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"难度等级\" label-width=\"120px\" prop=\"questionLevel\">\r\n            <el-select v-model=\"updateQuForm.questionLevel\" placeholder=\"请选择\">\r\n              <el-option :value=\"parseInt(1)\" label=\"简单\"></el-option>\r\n              <el-option :value=\"parseInt(2)\" label=\"中等\"></el-option>\r\n              <el-option :value=\"parseInt(3)\" label=\"困难\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n\r\n          <el-form-item label=\"归属题库\" label-width=\"120px\" prop=\"bankId\">\r\n            <el-select multiple v-model=\"updateQuForm.bankId\" placeholder=\"请选择\">\r\n              <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\r\n                         :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n\r\n          <el-form-item label=\"题目内容\" label-width=\"120px\" prop=\"questionContent\">\r\n            <el-input v-model=\"updateQuForm.questionContent\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                      :rows=\"2\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"题目图片\" label-width=\"120px\">\r\n            <el-upload\r\n              action=\"http://localhost:8888/teacher/uploadQuestionImage\"\r\n              :on-preview=\"uploadPreview\"\r\n              :on-remove=\"handleUpdateRemove\"\r\n              :headers=\"headers\"\r\n              :before-upload=\"beforeAvatarUpload\"\r\n              list-type=\"picture\"\r\n              :on-success=\"updateUploadImgSuccess\"\r\n              name=\"file\">\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10M</div>\r\n            </el-upload>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"整题解析\" label-width=\"120px\" prop=\"analysis\">\r\n            <el-input v-model=\"updateQuForm.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                      :rows=\"2\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-button v-if=\"updateQuForm.questionType!==4\" type=\"primary\" plain size=\"small\" icon=\"el-icon-plus\"\r\n                     style=\"margin-left: 40px\" @click=\"addUpdateAnswer\">\r\n            添加\r\n          </el-button>\r\n\r\n          <!--存放答案表单的信息-->\r\n          <el-form-item prop=\"answer\" v-if=\"updateQuForm.questionType !== 4\">\r\n            <el-table :data=\"updateQuForm.answer\" border style=\"width: 96%;margin-left: 40px;margin-top: 10px\">\r\n\r\n              <el-table-column label=\"是否答案\" width=\"80\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-checkbox v-model=\"scope.row.isTrue\" @change=\"checked=>checkUpdateAnswer(checked,scope.row.id)\">答案\r\n                  </el-checkbox>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"答案图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-upload id=\"answerUpload\" :limit=\"1\"\r\n                             action=\"http://localhost:8888/teacher/uploadQuestionImage\"\r\n                             :on-preview=\"uploadPreview\"\r\n                             :on-remove=\"handleUpdateAnswerRemove\"\r\n                             :headers=\"headers\"\r\n                             :before-upload=\"beforeAvatarUpload\"\r\n                             list-type=\"picture\"\r\n                             :on-success=\"(res) => { return uploadUpdateAnswerImgSuccess(res,scope.row.id)}\"\r\n                             name=\"file\">\r\n                    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n                  </el-upload>\r\n                </template>\r\n\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"答案内容\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input v-model=\"scope.row.answer\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                            :rows=\"2\"></el-input>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"答案解析\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input v-model=\"scope.row.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                            :rows=\"2\"></el-input>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle\r\n                             @click=\"delUpdateAnswer(scope.row.id)\"></el-button>\r\n                </template>\r\n              </el-table-column>\r\n\r\n            </el-table>\r\n          </el-form-item>\r\n\r\n        </el-form>\r\n\r\n      </el-card>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"updateQuTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateQuestion\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"新增题目\" :visible.sync=\"addQuTableVisible\" width=\"50%\" @close=\"resetAddQuForm\" center>\r\n\r\n      <el-card>\r\n\r\n        <el-form :model=\"addQuForm\" ref=\"addQuForm\" :rules=\"addQuFormRules\">\r\n\r\n          <el-form-item label=\"题目类型\" label-width=\"120px\" prop=\"questionType\">\r\n            <el-select v-model=\"addQuForm.questionType\" @change=\"addQuForm.answer =  []\" placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in questionType\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"难度等级\" label-width=\"120px\" prop=\"questionLevel\">\r\n            <el-select v-model=\"addQuForm.questionLevel\" placeholder=\"请选择\">\r\n              <el-option :value=\"parseInt(1)\" label=\"简单\"></el-option>\r\n              <el-option :value=\"parseInt(2)\" label=\"中等\"></el-option>\r\n              <el-option :value=\"parseInt(3)\" label=\"困难\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n\r\n          <el-form-item label=\"归属题库\" label-width=\"120px\" prop=\"bankId\">\r\n            <el-select multiple v-model=\"addQuForm.bankId\" placeholder=\"请选择\">\r\n              <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\r\n                         :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n\r\n          <el-form-item label=\"题目内容\" label-width=\"120px\" prop=\"questionContent\">\r\n            <el-input v-model=\"addQuForm.questionContent\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                      :rows=\"2\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"题目图片\" label-width=\"120px\" prop=\"image\">\r\n            <el-upload\r\n              action=\"http://localhost:8888/teacher/uploadQuestionImage\"\r\n              :on-preview=\"uploadPreview\"\r\n              :on-remove=\"handleRemove\"\r\n              :headers=\"headers\"\r\n              :before-upload=\"beforeAvatarUpload\"\r\n              list-type=\"picture\"\r\n              :on-success=\"uploadImgSuccess\"\r\n              name=\"file\">\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10M</div>\r\n            </el-upload>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"整题解析\" label-width=\"120px\" prop=\"analysis\">\r\n            <el-input v-model=\"addQuForm.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                      :rows=\"2\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-button v-if=\"addQuForm.questionType!==4\" type=\"primary\" plain size=\"small\" icon=\"el-icon-plus\"\r\n                     style=\"margin-left: 40px\" @click=\"addAnswer\">\r\n            添加\r\n          </el-button>\r\n\r\n          <!--存放答案表单的信息-->\r\n          <el-form-item prop=\"answer\" v-if=\"addQuForm.questionType!==4\">\r\n            <el-table :data=\"addQuForm.answer\" border style=\"width: 96%;margin-left: 40px;margin-top: 10px\">\r\n\r\n              <el-table-column label=\"是否答案\" width=\"80\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-checkbox v-model=\"scope.row.isTrue\" @change=\"checked=>checkAnswer(checked,scope.row.id)\">答案\r\n                  </el-checkbox>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"答案图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-upload :limit=\"1\"\r\n                             action=\"http://localhost:8888/teacher/uploadQuestionImage\"\r\n                             :on-preview=\"uploadPreview\"\r\n                             :on-remove=\"handleAnswerRemove\"\r\n                             :headers=\"headers\"\r\n                             :before-upload=\"beforeAvatarUpload\"\r\n                             list-type=\"picture\"\r\n                             :on-success=\"(res) => { return uploadAnswerImgSuccess(res,scope.row.id)}\"\r\n                             name=\"file\">\r\n                    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n                  </el-upload>\r\n                </template>\r\n\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"答案内容\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input v-model=\"scope.row.answer\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                            :rows=\"2\"></el-input>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"答案解析\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input v-model=\"scope.row.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\r\n                            :rows=\"2\"></el-input>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"delAnswer(scope.row.id)\"></el-button>\r\n                </template>\r\n              </el-table-column>\r\n\r\n            </el-table>\r\n          </el-form-item>\r\n\r\n        </el-form>\r\n\r\n      </el-card>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addQuTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addQuestion\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"加入题库\" :visible.sync=\"addTableVisible\" width=\"30%\" @close=\"resetAddForm\"\r\n               center>\r\n\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addForm\">\r\n\r\n        <el-form-item label=\"题库名称\" label-width=\"120px\" prop=\"bankId\">\r\n\r\n          <el-select multiple v-model=\"addForm.bankId\" placeholder=\"请选择题库\">\r\n            <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\r\n                       :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\r\n          </el-select>\r\n\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addBank\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"从题库中移除\" :visible.sync=\"removeTableVisible\" width=\"30%\" @close=\"resetRemoveForm\"\r\n               center>\r\n\r\n      <el-form :model=\"removeForm\" :rules=\"removeFormRules\" ref=\"removeForm\">\r\n\r\n        <el-form-item label=\"题库名称\" label-width=\"120px\" prop=\"bankId\">\r\n\r\n          <el-select multiple v-model=\"removeForm.bankId\" placeholder=\"请选择题库\">\r\n\r\n            <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\r\n                       :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\r\n          </el-select>\r\n\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"removeTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"removeBank\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--图片回显-->\r\n    <el-dialog :visible.sync=\"backShowImgVisible\" @close=\"backShowImgVisible = false\">\r\n      <img style=\"width: 100%\" :src=\"backShowImgUrl\" alt=\"\">\r\n    </el-dialog>\r\n\r\n  </el-container>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'QuestionManage',\r\n    data () {\r\n      return {\r\n        //查询用户的参数\r\n        queryInfo: {\r\n          //题目类型下拉款所选的内容\r\n          'questionType': '',\r\n          'questionBank': '',\r\n          'questionContent': '',\r\n          'pageNo': 1,\r\n          'pageSize': 10\r\n        },\r\n        //题目类型\r\n        questionType: [\r\n          {\r\n            id: 1,\r\n            name: '单选题',\r\n          },\r\n          {\r\n            id: 2,\r\n            name: '多选题',\r\n          },\r\n          {\r\n            id: 3,\r\n            name: '判断题',\r\n          },\r\n          {\r\n            id: 4,\r\n            name: '简答题',\r\n          },\r\n        ],\r\n        //题库信息\r\n        allBank: [],\r\n        //题目信息\r\n        questionInfo: [],\r\n        //题目信息表格是否加载\r\n        loading: true,\r\n        //表格被选中的所有行\r\n        selectionTable: [],\r\n        //表格行被选中后的所有操作方式的数据\r\n        optionInfo: [\r\n          {\r\n            'label': '删除',\r\n            'desc': 'delete'\r\n          },\r\n          {\r\n            'label': '加入题库',\r\n            'desc': 'add'\r\n          },\r\n          {\r\n            'label': '题库中移除',\r\n            'desc': 'remove'\r\n          }\r\n        ],\r\n        //表格行被选中后的数据\r\n        operation: '',\r\n        //题目总数\r\n        total: 0,\r\n        //是否显示加入题库对话框\r\n        addTableVisible: false,\r\n        //是否显示移除题库对话框\r\n        removeTableVisible: false,\r\n        //是否显示添加题目的对话框\r\n        addQuTableVisible: false,\r\n        //添加题库的表单信息\r\n        addForm: {\r\n          bankId: ''\r\n        },\r\n        removeForm: {\r\n          bankId: ''\r\n        },\r\n        //添加题库表单的验证\r\n        addFormRules: {\r\n          bankId: [\r\n            {\r\n              required: true,\r\n              message: '请选择需要添加进的题库',\r\n              trigger: 'blur'\r\n            }\r\n          ]\r\n        },\r\n        //移除题库表单的验证\r\n        removeFormRules: {\r\n          bankId: [\r\n            {\r\n              required: true,\r\n              message: '请选择需要移除的题库',\r\n              trigger: 'blur'\r\n            }\r\n          ]\r\n        },\r\n        //添加题目的表单信息\r\n        addQuForm: {\r\n          questionType: 1,\r\n          questionLevel: 1,\r\n          bankId: '',\r\n          questionContent: '',\r\n          images: [],\r\n          analysis: '',\r\n          createPerson: localStorage.getItem('username'),\r\n          //答案对象\r\n          answer: []\r\n        },\r\n        //添加题目表单的验证规则\r\n        addQuFormRules: {\r\n          questionType: [\r\n            {\r\n              required: true,\r\n              message: '请选择问题类型',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          questionLevel: [\r\n            {\r\n              required: true,\r\n              message: '请选择问题难度',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          bankId: [\r\n            {\r\n              required: true,\r\n              message: '请选择题库',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          questionContent: [\r\n            {\r\n              required: true,\r\n              message: '请输入题库内容',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n        },\r\n        //更新题目表单的验证规则\r\n        updateQuFormRules: {\r\n          questionType: [\r\n            {\r\n              required: true,\r\n              message: '请选择问题类型',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          questionLevel: [\r\n            {\r\n              required: true,\r\n              message: '请选择问题难度',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          bankId: [\r\n            {\r\n              required: true,\r\n              message: '请选择题库',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          questionContent: [\r\n            {\r\n              required: true,\r\n              message: '请输入题库内容',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n        },\r\n        //图片回显的样式\r\n        backShowImgVisible: false,\r\n        //图片回显的图片地址\r\n        backShowImgUrl: '',\r\n        //更新题目的数据信息\r\n        updateQuForm: {\r\n          questionId: '',\r\n          questionType: 1,\r\n          questionLevel: 1,\r\n          bankId: '',\r\n          questionContent: '',\r\n          images: [],\r\n          analysis: '',\r\n          createPerson: localStorage.getItem('username'),\r\n          //答案对象\r\n          answer: []\r\n        },\r\n        //是否显示更新题目的对话框\r\n        updateQuTableVisible: false,\r\n      }\r\n    },\r\n    created () {\r\n      this.getQuestionBankInfo()\r\n      this.getQuestionInfo()\r\n    },\r\n    methods: {\r\n      //获取所有的题库信息\r\n      getQuestionBankInfo () {\r\n        this.$http.get(this.API.getQuestionBank).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            this.allBank = resp.data.data\r\n          } else {\r\n            this.$notify({\r\n              title: 'Tips',\r\n              message: '获取题库信息失败',\r\n              type: 'error',\r\n              duration: 2000\r\n            })\r\n          }\r\n        })\r\n      },\r\n      //题目类型变化\r\n      typeChange (val) {\r\n        this.queryInfo.questionType = val\r\n        this.getQuestionInfo()\r\n      },\r\n      //题库变化\r\n      bankChange (val) {\r\n        this.queryInfo.questionBank = val\r\n        this.getQuestionInfo()\r\n      },\r\n      //题目名字筛选\r\n      contentChange () {\r\n        //发送查询题目总数的请求\r\n        this.getQuestionInfo()\r\n      },\r\n      //获取题目信息\r\n      getQuestionInfo () {\r\n        this.$http.get(this.API.getQuestion, { params: this.queryInfo }).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            this.questionInfo = resp.data.data.questions;\r\n            this.total = resp.data.data.total;\r\n            this.loading = false\r\n          } else {\r\n            this.$notify({\r\n              title: 'Tips',\r\n              message: '获取题库信息失败',\r\n              type: 'error',\r\n              duration: 2000\r\n            })\r\n          }\r\n        })\r\n      },\r\n      //处理表格被选中\r\n      handleTableSectionChange (val) {\r\n        this.selectionTable = val\r\n      },\r\n      //处理操作选择框的变化\r\n      operationChange (val) {\r\n        //清空上一次的选择\r\n        this.operation = ''\r\n\r\n        let questionIds = []\r\n        if (val === 'delete') {\r\n          this.selectionTable.map(item => {\r\n            questionIds.push(item.id)\r\n          })\r\n          //发起删除请求\r\n          this.$http.get(this.API.deleteQuestion, { params: { 'questionIds': questionIds.join(',') } }).then(resp => {\r\n            if (resp.data.code === 200) {\r\n              this.$notify({\r\n                title: 'Tips',\r\n                message: '删除成功',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n              this.getQuestionInfo()\r\n            } else {\r\n              this.$notify({\r\n                title: 'Tips',\r\n                message: '删除失败',\r\n                type: 'error',\r\n                duration: 2000\r\n              })\r\n            }\r\n          })\r\n        } else if (val === 'add') {\r\n          this.addTableVisible = true\r\n        } else if (val === 'remove') {\r\n          this.removeTableVisible = true\r\n        }\r\n      },\r\n      //分页页面大小改变\r\n      handleSizeChange (val) {\r\n        this.queryInfo.pageSize = val\r\n        this.getQuestionInfo()\r\n      },\r\n      //分页插件的页数\r\n      handleCurrentChange (val) {\r\n        this.queryInfo.pageNo = val\r\n        this.getQuestionInfo()\r\n      },\r\n      //表单信息重置\r\n      resetAddForm () {\r\n        //清空表格数据\r\n        this.$refs['addForm'].resetFields()\r\n      },\r\n      resetRemoveForm () {\r\n        //清空表格数据\r\n        this.$refs['removeForm'].resetFields()\r\n      },\r\n      resetAddQuForm () {\r\n        this.$refs['addQuForm'].resetFields()\r\n      },\r\n      //提交加入题库的表单信息\r\n      addBank () {\r\n        this.$refs['addForm'].validate((valid) => {\r\n          if (valid) {\r\n            let questionIds = []\r\n            let banks = this.addForm.bankId\r\n            //将表格选中的数据中的问题id加入进去\r\n            this.selectionTable.map(item => {\r\n              questionIds.push(item.id)\r\n            })\r\n            this.$http.get(this.API.addBankQuestion, {\r\n              params: {\r\n                'questionIds': questionIds.join(','),\r\n                'banks': banks.join(',')\r\n              }\r\n            }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.getQuestionInfo()\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              } else {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'error',\r\n                  duration: 2000\r\n                })\r\n              }\r\n              this.addTableVisible = false\r\n            })\r\n          } else {\r\n            this.$message.error('请选择需要加入进的题库')\r\n            return false\r\n          }\r\n        })\r\n      },\r\n      //提交移除题库的表单信息\r\n      removeBank () {\r\n        this.$refs['removeForm'].validate((valid) => {\r\n          if (valid) {\r\n            let questionIds = []\r\n            let banks = this.removeForm.bankId\r\n            //将表格选中的数据中的问题id加入进去\r\n            this.selectionTable.map(item => {\r\n              questionIds.push(item.id)\r\n            })\r\n            //发起移除请求\r\n            this.$http.get(this.API.removeBankQuestion, {\r\n              params: {\r\n                'questionIds': questionIds.join(','),\r\n                'banks': banks.join(',')\r\n              }\r\n            }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.getQuestionInfo()\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              } else {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'error',\r\n                  duration: 2000\r\n                })\r\n              }\r\n              this.removeTableVisible = false\r\n            })\r\n          } else {\r\n            this.$message.error('请选择需要移除的题库')\r\n            return false\r\n          }\r\n        })\r\n      },\r\n      //新增题目上传后 点击图片的回显\r\n      uploadPreview (file) {\r\n        this.backShowImgUrl = file.response.data\r\n        this.backShowImgVisible = true\r\n      },\r\n      //新增题目中的上传图片的移除\r\n      handleRemove (file, fileList) {\r\n        this.addQuForm.images.map((item, index) => {//移除图片在表单中的数据\r\n          if (item === file.response.data) this.addQuForm.images.splice(index, 1)\r\n        })\r\n      },\r\n      //更新题目中的上传图片的移除\r\n      handleUpdateRemove (file, fileList) {\r\n        this.updateQuForm.images.map((item, index) => {//移除图片在表单中的数据\r\n          if (item === file.response.data) this.updateQuForm.images.splice(index, 1)\r\n        })\r\n      },\r\n      //新增题目中的上传图片的格式大小限制\r\n      beforeAvatarUpload (file) {\r\n        const isImg = file.type === 'image/jpeg' ||\r\n          file.type === 'image/png' ||\r\n          file.type === 'image/jpg'\r\n        const isLt = file.size / 1024 / 1024 < 10\r\n\r\n        if (!isImg) {\r\n          this.$message.error('上传图片只能是 JPG/PNG 格式!')\r\n        }\r\n\r\n        if (!isLt) {\r\n          this.$message.error('上传头像图片大小不能超过 10MB!')\r\n        }\r\n        return isImg && isLt\r\n      },\r\n      //新增题目中的上传图片成功后的钩子函数\r\n      uploadImgSuccess (response, file, fileList) {\r\n        this.addQuForm.images.push(response.data)\r\n      },\r\n      //更新题目中的上传图片成功后的钩子函数\r\n      updateUploadImgSuccess (response, file, fileList) {\r\n        this.updateQuForm.images.push(response.data)\r\n      },\r\n      //新增题目中的新增答案填写框\r\n      addAnswer () {\r\n        this.addQuForm.answer.push({\r\n          id: this.addQuForm.answer.length,\r\n          isTrue: false,\r\n          answer: '',\r\n          images: [],\r\n          analysis: ''\r\n        })\r\n      },\r\n      //更新时新增题目中的新增答案填写框\r\n      addUpdateAnswer () {\r\n        this.updateQuForm.answer.push({\r\n          id: this.updateQuForm.answer.length,\r\n          isTrue: false,\r\n          answer: '',\r\n          images: [],\r\n          analysis: ''\r\n        })\r\n      },\r\n      //新增题目中的删除答案填写框\r\n      delAnswer (id) {//当前答案的id\r\n        this.addQuForm.answer.map((item, index) => {\r\n          if (item.id === id) this.addQuForm.answer.splice(index, 1)\r\n        })\r\n      },\r\n      //新增题目中的删除答案填写框\r\n      delUpdateAnswer (id) {//当前答案的id\r\n        this.updateQuForm.answer.map((item, index) => {\r\n          if (item.id === id) this.updateQuForm.answer.splice(index, 1)\r\n        })\r\n      },\r\n      //答案上传照片了\r\n      uploadAnswerImgSuccess (response, id) {\r\n        this.addQuForm.answer[id].images.push(response.data)\r\n      },\r\n      //更新的答案上传图片了\r\n      uploadUpdateAnswerImgSuccess (response, id) {\r\n        this.updateQuForm.answer[id].images.push(response.data)\r\n      },\r\n      //答案上传成功后删除\r\n      handleAnswerRemove (file) {\r\n        this.addQuForm.answer.images.map((item, index) => {//移除图片在表单中的数据\r\n          if (item === file.response.data) this.addQuForm.images.splice(index, 1)\r\n        })\r\n      },\r\n      //更新的时候答案上传成功后删除\r\n      handleUpdateAnswerRemove (file) {\r\n        this.updateQuForm.answer.images.map((item, index) => {//移除图片在表单中的数据\r\n          if (item === file.response.data) this.updateQuForm.images.splice(index, 1)\r\n        })\r\n      },\r\n      //选择正确答案的按钮变化事件\r\n      checkAnswer (checked, id) {\r\n        if (checked) {\r\n          if (this.addQuForm.questionType === 1 || this.addQuForm.questionType === 3) {//单选或者判断\r\n            //当前已经有一个正确的选择了\r\n            this.addQuForm.answer.map(item => {\r\n              item.isTrue = false\r\n            })\r\n            this.addQuForm.answer.map(item => {\r\n              if (item.id === id) item.isTrue = true\r\n            })\r\n          } else {//多选 可以有多个答案\r\n            this.addQuForm.answer.map(item => {\r\n              if (item.id === id) item.isTrue = true\r\n            })\r\n          }\r\n        } else {\r\n          this.addQuForm.answer.map(item => {\r\n            if (item.id === id) item.isTrue = false\r\n          })\r\n        }\r\n      },\r\n      //更新时选择正确答案的按钮变化事件\r\n      checkUpdateAnswer (checked, id) {\r\n        if (checked) {\r\n          if (this.updateQuForm.questionType === 1 || this.updateQuForm.questionType === 3) {//单选或者判断\r\n            //当前已经有一个正确的选择了\r\n            this.updateQuForm.answer.map(item => {\r\n              item.isTrue = false\r\n            })\r\n            this.updateQuForm.answer.map(item => {\r\n              if (item.id === id) item.isTrue = true\r\n            })\r\n          } else {//多选 可以有多个答案\r\n            this.updateQuForm.answer.map(item => {\r\n              if (item.id === id) item.isTrue = true\r\n            })\r\n          }\r\n        } else {\r\n          this.updateQuForm.answer.map(item => {\r\n            if (item.id === id) item.isTrue = false\r\n          })\r\n        }\r\n      },\r\n      //新增题目\r\n      addQuestion () {\r\n        this.$refs['addQuForm'].validate((valid) => {\r\n          if (valid && this.addQuForm.answer.some(item => item.isTrue) && this.addQuForm.questionType !== 4) {//单选或者多选或者判断\r\n            this.$http.post(this.API.addQuestion, this.addQuForm).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.addQuTableVisible = false\r\n                this.getQuestionInfo()\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: '新增题目成功',\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              } else {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              }\r\n            })\r\n          } else if (valid && !this.addQuForm.answer.some(item => item.isTrue) && this.addQuForm.questionType !== 4) {//无答案\r\n            this.$message.error('必须有一个答案')\r\n            return false\r\n          } else if (valid && this.addQuForm.questionType === 4) {//简答题 无标准答案直接发请求\r\n            //当是简答题的时候需要清除answer\r\n            this.addQuForm.answer = []\r\n            this.$http.post(this.API.addQuestion, this.addQuForm).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.addQuTableVisible = false\r\n                this.getQuestionInfo()\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: '新增题目成功',\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              } else {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              }\r\n            })\r\n          } else if (!valid) {\r\n            this.$message.error('请填写必要信息')\r\n            return false\r\n          }\r\n        })\r\n      },\r\n      //更新题目\r\n      updateQu (id) {\r\n        this.$http.get(this.API.getQuestionById + '/' + id).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            if (resp.data.data.questionType !== 4) {\r\n                resp.data.data.answer.map(item => {\r\n                item.isTrue = item.isTrue === 'true'\r\n              })\r\n            }\r\n            this.updateQuForm = resp.data.data\r\n            //处理图片那个参数是个数组\r\n            if (this.updateQuForm.images === null) this.updateQuForm.images = []\r\n\r\n            if (resp.data.data.questionType !== 4){\r\n              this.updateQuForm.answer.map(item => {\r\n                if (item.images === null) {\r\n                  item.images = []\r\n                }\r\n              })\r\n            }\r\n\r\n          } else {\r\n            this.$notify({\r\n              title: 'Tips',\r\n              type: 'error',\r\n              message: '获取信息失败'\r\n            })\r\n          }\r\n        })\r\n        this.updateQuTableVisible = true\r\n      },\r\n      //提交更新表单\r\n      updateQuestion () {\r\n        this.$refs['updateQuForm'].validate((valid) => {\r\n          if (valid && this.updateQuForm.questionType !== 4 && this.updateQuForm.answer.some(item => item.isTrue)) {//单选或者多选或者判断\r\n            //保证答案的图片只有一张\r\n            this.updateQuForm.answer.map(item => {\r\n              if (item.images.length > 1) {\r\n                item.images.splice(0, item.images.length - 1)\r\n              }\r\n            })\r\n            this.$http.post(this.API.updateQuestion, this.updateQuForm).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.updateQuTableVisible = false\r\n                this.getQuestionInfo()\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: '更新题目成功',\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              } else {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              }\r\n            })\r\n          } else if (valid && this.updateQuForm.questionType !== 4 && !this.updateQuForm.answer.some(item => item.isTrue)) {//无答案\r\n            this.$message.error('必须有一个答案')\r\n            return false\r\n          } else if (valid && this.updateQuForm.questionType === 4) {//简答题 无标准答案直接发请求\r\n            //当是简答题的时候需要清除answer\r\n            this.addQuForm.answer = []\r\n            this.$http.post(this.API.updateQuestion, this.updateQuForm).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.updateQuTableVisible = false\r\n                this.getQuestionInfo()\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: '更新题目成功',\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              } else {\r\n                this.$notify({\r\n                  title: 'Tips',\r\n                  message: resp.data.message,\r\n                  type: 'success',\r\n                  duration: 2000\r\n                })\r\n              }\r\n            })\r\n          } else if (!valid) {\r\n            this.$message.error('请填写必要信息')\r\n            return false\r\n          }\r\n        })\r\n      },\r\n    },\r\n    computed: {\r\n      //监测头部信息的token变化\r\n      headers () {\r\n        return {\r\n          authorization: localStorage.getItem('authorization') || ''\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .el-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .el-input {\r\n    width: 200px;\r\n  }\r\n\r\n  .el-container {\r\n    animation: leftMoveIn .7s ease-in;\r\n  }\r\n\r\n  @keyframes leftMoveIn {\r\n    0% {\r\n      transform: translateX(-100%);\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      transform: translateX(0%);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .role {\r\n    color: #606266;\r\n  }\r\n\r\n  /deep/ .el-table thead {\r\n    color: rgb(85, 85, 85) !important;\r\n  }\r\n\r\n  /*表格的头部样式*/\r\n  /deep/ .has-gutter tr th {\r\n    background: rgb(242, 243, 244);\r\n    color: rgb(85, 85, 85);\r\n    font-weight: bold;\r\n    line-height: 32px;\r\n  }\r\n\r\n  .el-table {\r\n    box-shadow: 0 0 1px 1px gainsboro;\r\n  }\r\n\r\n  .quContent {\r\n    color: #4d99de;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n"]}]}