{"remainingRequest":"D:\\code\\exam_system\\exam-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\src\\components\\TrainPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\exam_system\\exam-vue\\src\\components\\TrainPage.vue","mtime":1645680824556},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TrainPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-container v-loading=\"loading\">\r\n    <el-main>\r\n      <el-row>\r\n        <el-card style=\"padding: 15px\">\r\n          <!--题目信息-->\r\n          <div>\r\n            <span v-if=\"currentBankQuestion[curIndex].questionType === 1\">【单选题】</span>\r\n            <span v-else-if=\"currentBankQuestion[curIndex].questionType === 2\">【多选题】</span>\r\n            <span v-else>【判断题】</span>\r\n            {{ curIndex+1 + '/' + currentBankQuestion.length + '、' }}\r\n            <span>{{ currentBankQuestion[curIndex].questionContent}}:</span>\r\n          </div>\r\n\r\n          <!--题目中的配图-->\r\n          <img v-for=\"url in currentBankQuestion[curIndex].images\" :src=\"url\" title=\"点击查看大图\" alt=\"题目图片\"\r\n               style=\"width: 200px;height: 200px;cursor: pointer\" @click=\"showBigImg(url)\">\r\n\r\n          <!--单选的答案列表-->\r\n          <div style=\"margin-top: 25px\" v-show=\"currentBankQuestion[curIndex].questionType !== 2\">\r\n            <div class=\"el-radio-group\">\r\n              <label v-for=\"(item,index) in currentBankQuestion[curIndex].answer\"\r\n                     @click=\"checkSingleAnswer(index)\"\r\n                     :class=\"index === userAnswer[curIndex] ? 'active' : ''\">\r\n                <span>{{ optionName[index] + '、' + item.answer}}</span>\r\n                <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\r\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\r\n                     v-if=\"item.images !== null\"\r\n                     v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <!--单选的提示-->\r\n          <div\r\n            v-if=\"currentBankQuestion[curIndex].questionType !== 2 && userAnswer[curIndex] && (userAnswer[curIndex]+'') !== trueAnswer[curIndex]\">\r\n            <span style=\"color: #1f90ff\" v-text=\"'正确答案：' + optionName[trueAnswerIndex]\"></span>\r\n          </div>\r\n\r\n          <!--多选的答案列表-->\r\n          <div style=\"margin-top: 25px\" v-show=\"currentBankQuestion[curIndex].questionType === 2\">\r\n            <div class=\"el-radio-group\">\r\n              <label v-for=\"(item,index) in currentBankQuestion[curIndex].answer\"\r\n                     @click=\"selectedMultipleAnswer(index)\"\r\n                     :class=\"(userAnswer[curIndex]+'').indexOf(index+'') !== -1? 'active' : ''\">\r\n                <span>{{ optionName[index] + '、' + item.answer}}</span>\r\n                <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\r\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\r\n                     v-if=\"item.images !== null\"\r\n                     v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\r\n              </label>\r\n              <el-button size=\"small\" type=\"primary\" v-show=\"!confirmMultiple.includes(curIndex)\"\r\n                         @click=\"confirmMultipleAnswer()\">\r\n                确认答案\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n          <!--多选的提示-->\r\n          <div\r\n            v-if=\"currentBankQuestion[curIndex].questionType === 2 && confirmMultiple.includes(curIndex) &&\r\n            userAnswer[curIndex] !== undefined && String(userAnswer[curIndex]) !== String(trueAnswer[curIndex])\">\r\n            <span style=\"color: #1f90ff\" v-text=\"'正确答案：' +  multipleAnswer\"></span>\r\n          </div>\r\n\r\n          <div style=\"margin-top: 25px\">\r\n            <el-button type=\"primary\" :disabled=\"curIndex<1\" @click=\"curIndex--\">上一题</el-button>\r\n            <el-button type=\"primary\" :disabled=\"curIndex>=currentBankQuestion.length-1\" @click=\"curIndex++\">下一题\r\n            </el-button>\r\n            <el-button style=\"float: right\" @click=\"showAnswerCard = !showAnswerCard\">{{ showAnswerCard ? '隐藏答题卡' :\r\n              '显示答题卡' }}\r\n            </el-button>\r\n          </div>\r\n\r\n\r\n        </el-card>\r\n      </el-row>\r\n\r\n      <el-row v-if=\"currentBankQuestion[curIndex].questionType === 2 ? confirmMultiple.includes(curIndex) && trueAnswer[curIndex] !== userAnswer[curIndex]\r\n       : userAnswer[curIndex]!==undefined && trueAnswer[curIndex] !== userAnswer[curIndex]\">\r\n        <el-card style=\"position:relative;height: 60px;margin-top: 25px;\">\r\n          整体解析：\r\n          <br>\r\n          <span style=\"font-size: 12px\">{{ currentBankQuestion[curIndex].analysis }}</span>\r\n        </el-card>\r\n      </el-row>\r\n\r\n      <!--正确题数和正确率-->\r\n      <el-row>\r\n        <el-card style=\"position:relative;height: 60px;margin-top: 25px;\">\r\n          <span\r\n            style=\"position: absolute;color: #32cd32;font-size: 16px;left: 10%;top: 50%;transform: translateY(-50%)\">\r\n            答对: {{ trueSum }}题\r\n          </span>\r\n          <span\r\n            style=\"position: absolute;color: #ff0000;font-size: 16px;left: 40%;top: 50%;transform: translateY(-50%)\">\r\n            答错: {{ wrongSum }}题\r\n          </span>\r\n          <span\r\n            style=\"position: absolute;font-size: 16px;left: 60%;top: 50%;transform: translateY(-50%)\">\r\n            正确率: {{(trueSum+wrongSum) !== 0 ? ((trueSum / (wrongSum+trueSum)) * 100).toFixed(0) + '%' : '0%' }}\r\n          </span>\r\n        </el-card>\r\n      </el-row>\r\n\r\n      <!--答题卡-->\r\n      <el-row v-show=\"showAnswerCard\">\r\n        <el-card>\r\n          <el-button style=\"margin-top: 10px;\" :class=\"currentBankQuestion[item-1].questionType === 2 && !confirmMultiple.includes(item-1)?'' : userAnswer[item-1] !== undefined && (userAnswer[item-1]+'') === String(trueAnswer[item-1])\r\n          ? 'true': userAnswer[item-1] === undefined ? '' : 'wrong'\"\r\n                     v-for=\"item in currentBankQuestion.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\r\n          </el-button>\r\n        </el-card>\r\n      </el-row>\r\n\r\n    </el-main>\r\n\r\n    <!--图片回显-->\r\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\r\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\r\n    </el-dialog>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'TrainPage',\r\n    data () {\r\n      return {\r\n        //当前题库id\r\n        bankId: this.$route.params.bankId,\r\n        //当前训练类型(1顺序,2随机,3单选,4多选,5判断)\r\n        trainType: this.$route.params.trainType,\r\n        //当前题库的所有题目信息\r\n        currentBankQuestion: [\r\n          {\r\n            questionType: ''\r\n          }\r\n        ],\r\n        //当前题目的索引值\r\n        curIndex: 0,\r\n        //控制大图的对话框\r\n        bigImgDialog: false,\r\n        //当前要展示的大图的url\r\n        bigImgUrl: '',\r\n        //页面加载题库数据\r\n        loading: true,\r\n        //答案的选项名abcd数据\r\n        optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\r\n        //单选的答案确定,\r\n        singleAnswer: '',\r\n        //用户选择的答案\r\n        userAnswer: [],\r\n        //正确答案\r\n        trueAnswer: [],\r\n        //是否显示答题卡\r\n        showAnswerCard: false,\r\n        //用户答对几题\r\n        trueSum: 0,\r\n        //用户答错几题\r\n        wrongSum: 0,\r\n        //已经确定答案的多选题序号\r\n        confirmMultiple: []\r\n      }\r\n    },\r\n    props: ['tagInfo'],\r\n    created () {\r\n      //一创建就改变头部的面包屑\r\n      this.$emit('giveChildChangeBreakInfo', '开始训练', '在线考试')\r\n      this.createTagsInParent()\r\n      this.getQuestionInfo()\r\n    },\r\n    methods: {\r\n      //向父组件中添加头部的tags标签\r\n      createTagsInParent () {\r\n        let flag = false\r\n        this.tagInfo.map(item => {\r\n          //如果tags全部符合\r\n          if (item.name === '开始训练' && item.url === this.$route.path) {\r\n            flag = true\r\n          } else if (item.name === '开始训练' && item.url !== this.$route.path) {\r\n            this.$emit('updateTagInfo', '开始训练', this.$route.path)\r\n            flag = true\r\n          }\r\n        })\r\n        if (!flag) this.$emit('giveChildAddTag', '开始训练', this.$route.path)\r\n      },\r\n      //获取题目顺序 并按照对应方式加载\r\n      getQuestionInfo () {\r\n        switch (parseInt(this.$route.params.trainType)) {\r\n          case 1: {//顺序生成题目\r\n            this.$http.get(this.API.getQuestionByBank, { params: { 'bankId': this.bankId } }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.currentBankQuestion = resp.data.data\r\n                this.loading = false\r\n                //获取正确答案\r\n                this.getTrueAnswer()\r\n              }\r\n            })\r\n            break\r\n          }\r\n          case 2: {//随机练习\r\n            this.$http.get(this.API.getQuestionByBank, { params: { 'bankId': this.bankId } }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                //随机打乱题目\r\n                let arr = resp.data.data\r\n                for (let i = arr.length - 1; i >= 0; i--) {\r\n                  let randomIndex = Math.floor(Math.random() * (i + 1))\r\n                  let itemAtIndex = arr[randomIndex]\r\n                  arr[randomIndex] = arr[i]\r\n                  arr[i] = itemAtIndex\r\n                }\r\n                this.currentBankQuestion = arr\r\n                this.loading = false\r\n                //获取正确答案\r\n                this.getTrueAnswer()\r\n              }\r\n            })\r\n            break\r\n          }\r\n          case 3: {//单选题模式\r\n            this.$http.get(this.API.getQuestionByBankIdAndType, {\r\n              params: {\r\n                'bankId': this.bankId,\r\n                'type': 1\r\n              }\r\n            }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.currentBankQuestion = resp.data.data\r\n                this.loading = false\r\n                //获取正确答案\r\n                this.getTrueAnswer()\r\n              }\r\n            })\r\n            break\r\n          }\r\n          case 4: {//多选题模式\r\n            this.$http.get(this.API.getQuestionByBankIdAndType, {\r\n              params: {\r\n                'bankId': this.bankId,\r\n                'type': 2\r\n              }\r\n            }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.currentBankQuestion = resp.data.data\r\n                this.loading = false\r\n                //获取正确答案\r\n                this.getTrueAnswer()\r\n              }\r\n            })\r\n            break\r\n          }\r\n          case 5: {//判断题模式\r\n            this.$http.get(this.API.getQuestionByBankIdAndType, {\r\n              params: {\r\n                'bankId': this.bankId,\r\n                'type': 3\r\n              }\r\n            }).then((resp) => {\r\n              if (resp.data.code === 200) {\r\n                this.currentBankQuestion = resp.data.data\r\n                this.loading = false\r\n                //获取正确答案\r\n                this.getTrueAnswer()\r\n              }\r\n            })\r\n            break\r\n          }\r\n        }\r\n      },\r\n      //点击展示高清大图\r\n      showBigImg (url) {\r\n        this.bigImgUrl = url\r\n        this.bigImgDialog = true\r\n      },\r\n      //检验单选题的用户选择的答案\r\n      checkSingleAnswer (index) {\r\n        if (this.userAnswer[this.curIndex] === undefined && (index + '') === this.trueAnswer[this.curIndex]) {//答题并且是对的\r\n          this.userAnswer[this.curIndex] = index\r\n          this.trueSum++\r\n          if (this.curIndex < this.trueAnswer.length - 1) this.curIndex++\r\n        } else if (this.userAnswer[this.curIndex] === undefined && (index + '') !== this.trueAnswer[this.curIndex]) {//答题是错误的答案\r\n          this.userAnswer[this.curIndex] = index\r\n          this.wrongSum++\r\n        }\r\n      },\r\n      //多选题用户的答案选中\r\n      selectedMultipleAnswer (index) {\r\n        if (!this.confirmMultiple.includes(this.curIndex)) {//当前题目还没确认答案\r\n          if (this.userAnswer[this.curIndex] === undefined) {//当前是多选的第一个答案\r\n            this.$set(this.userAnswer, this.curIndex, index)\r\n          } else if (String(this.userAnswer[this.curIndex]).split(',').includes(index + '')) {//取消选中\r\n            let newArr = []\r\n            String(this.userAnswer[this.curIndex]).split(',').forEach(item => {\r\n              if (item !== '' + index) newArr.push(item)\r\n            })\r\n            if (newArr.length === 0) {\r\n              this.$set(this.userAnswer, this.curIndex, undefined)\r\n            } else {\r\n              this.$set(this.userAnswer, this.curIndex, newArr.join(','))\r\n            }\r\n          } else if (!((this.userAnswer[this.curIndex] + '').split(',').includes(index + ''))) {//第n个答案\r\n            this.$set(this.userAnswer, this.curIndex, this.userAnswer[this.curIndex] += ',' + index)\r\n          }\r\n        }\r\n      },\r\n      //当前题库的正确答案的数据\r\n      getTrueAnswer () {\r\n        let x = []\r\n        this.currentBankQuestion.forEach((item, index) => {\r\n          x = []\r\n          item.answer.map((i2, index2) => {\r\n            if (i2.isTrue === 'true') x.push(index2)\r\n          })\r\n          //放入正确答案中\r\n          this.trueAnswer[index] = x.join(',')\r\n        })\r\n      },\r\n      //多选题确认\r\n      confirmMultipleAnswer () {\r\n        //答案格式化\r\n        this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\r\n          return a - b\r\n        }).join(',')\r\n        if (this.userAnswer[this.curIndex] === this.trueAnswer[this.curIndex]) {\r\n          this.confirmMultiple.push(this.curIndex)\r\n          this.trueSum++\r\n          this.curIndex++\r\n        } else {\r\n          this.wrongSum++\r\n          this.confirmMultiple.push(this.curIndex)\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      //题目正确的下标\r\n      trueAnswerIndex () {\r\n        let answer = []\r\n        this.currentBankQuestion[this.curIndex].answer.forEach((item, index) => {\r\n          if (item.isTrue === 'true') answer.push(index)\r\n        })\r\n        return answer.join(',')\r\n      },\r\n      //多选题的正确答案提示\r\n      multipleAnswer () {\r\n        let res = String()\r\n        String(this.trueAnswer[this.curIndex]).split(',').forEach(item => {\r\n          res += String(this.optionName[parseInt(item)])\r\n        })\r\n        return res\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .el-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .el-container {\r\n    animation: leftMoveIn .7s ease-in;\r\n  }\r\n\r\n  @keyframes leftMoveIn {\r\n    0% {\r\n      transform: translateX(-100%);\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      transform: translateX(0%);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .el-row {\r\n    width: 100%;\r\n  }\r\n\r\n  span {\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n  }\r\n\r\n  .el-radio-group label {\r\n    display: block;\r\n    width: 400px;\r\n    padding: 48px 20px 10px 20px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dcdfe6;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    span {\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  .el-radio-group label:hover {\r\n    background-color: rgb(245, 247, 250);\r\n  }\r\n\r\n  /*当前选中的答案*/\r\n  .active {\r\n    border: 1px solid #1f90ff !important;\r\n    opacity: .5;\r\n  }\r\n\r\n  /*答题卡的正确的颜色*/\r\n  .true {\r\n    background-color: rgb(19, 206, 102);;\r\n  }\r\n\r\n  .wrong {\r\n    background-color: rgb(255, 73, 73);\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}