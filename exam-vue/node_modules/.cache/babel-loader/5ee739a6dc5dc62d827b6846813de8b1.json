{"remainingRequest":"D:\\code\\exam_system\\exam-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\exam_system\\exam-vue\\src\\components\\StatisticOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\exam_system\\exam-vue\\src\\components\\StatisticOverview.vue","mtime":1647855102268},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\exam_system\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatisticOverview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-container>\r\n    \r\n    <el-header>\r\n      <!--操作的下拉框-->\r\n      <el-select @change=\"operation\" clearable v-model=\"queryInfo.examId\"\r\n                 placeholder=\"请选择考试\" style=\"margin-bottom: 25px;\">\r\n        <el-option v-for=\"(item,index) in allExamInfo\" :key=\"index\" :label=\"item.examName\" :value=\"parseInt(item.examId)\">\r\n          <span style=\"float: left\">{{ item.examName }}</span>\r\n        </el-option>\r\n      </el-select>\r\n\r\n    </el-header>\r\n\r\n    <el-row>\r\n      <div id=\"img1\" style=\"width: 800px;height:400px;\"></div>\r\n      <div id=\"img2\" style=\"width: 800px;height:400px;\"></div>\r\n    </el-row>\r\n\r\n    <!-- <el-row>\r\n      <div id=\"img3\" style=\"width: 800px;height:400px;\"></div>\r\n      <div id=\"img4\" style=\"width: 800px;height:400px;\"></div>\r\n    </el-row> -->\r\n\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n\r\n    name: 'StatisticOverview',\r\n\r\n    data () {\r\n      return {\r\n        queryInfo: {\r\n          pageNo: 1,\r\n          pageSize: 10\r\n        },\r\n        //所有考试信息\r\n        allExamInfo: [],\r\n        //考试名称\r\n        examNames: [],\r\n        //考试通过率\r\n        passRate: [],\r\n        //饼图的数据\r\n        pieData: [],\r\n      }\r\n    },\r\n\r\n    created () {\r\n      //页面数据加载的等待状态栏\r\n      this.loading = this.$Loading.service({\r\n        body: true,\r\n        lock: true,\r\n        text: '数据拼命加载中,(*╹▽╹*)',\r\n        spinner: 'el-icon-loading',\r\n      })\r\n      this.getExamPassRate()\r\n      this.getExamNumbers()\r\n    },\r\n\r\n    methods: {\r\n\r\n      async getExamPassRate () {\r\n        await this.$http.get(this.API.getExamPassRate).then((resp) => {\r\n          if (resp.data.code === 200) {\r\n            this.examNames = resp.data.data[0].split(',')\r\n            this.passRate = resp.data.data[1].split(',')\r\n            this.drawLine()\r\n            //this.drawBrokenLine()\r\n            //this.drawImg4()\r\n            this.loading.close()\r\n          }\r\n        })\r\n      },\r\n\r\n      //考试通过率柱状图\r\n      drawLine () {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        let myChart = this.$echarts.init(document.getElementById('img1'))\r\n        // 绘制图表\r\n        myChart.setOption({\r\n          title: {\r\n            text: '考试通过率',\r\n            subtext: 'dashbord1',\r\n            x: 'center',\r\n            y: 'top',\r\n            textAlign: 'center'\r\n          },\r\n          tooltip: {},\r\n          xAxis: {\r\n            data: this.examNames\r\n          },\r\n          yAxis: {},\r\n          series: [{\r\n            name: '通过率',\r\n            type: 'bar',\r\n            data: this.passRate\r\n          }]\r\n        })\r\n      },\r\n\r\n      //获取考试次数数据\r\n      async getExamNumbers () {\r\n        await this.$http.get(this.API.getExamNumbers).then((resp) => {\r\n          console.log(resp)\r\n          let examNames = resp.data.data[0].split(',')\r\n          let examNumbers = resp.data.data[1].split(',')\r\n          examNames.forEach((item, index) => {\r\n            this.pieData.push({\r\n              name: item,\r\n              value: parseInt(examNumbers[index])\r\n            })\r\n          })\r\n          this.drawPie()\r\n        })\r\n      },\r\n\r\n      //考试次数饼图\r\n      drawPie () {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        let myChart = this.$echarts.init(document.getElementById('img2'))\r\n        myChart.setOption({\r\n          title: {\r\n            text: '考试次数占比',\r\n            subtext: 'dashbord2',\r\n            x: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c}次 ({d}%)'\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: this.pieData\r\n          },\r\n          series: [\r\n            {\r\n              name: '考试次数',\r\n              type: 'pie',\r\n              radius: '55%',\r\n              data: this.pieData,\r\n              roseType: 'angle',\r\n              itemStyle: {\r\n                normal: {\r\n                  shadowBlur: 200,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        })\r\n      },\r\n\r\n      //通过率的折线图\r\n      drawBrokenLine () {\r\n        //初始化ehcharts实例\r\n        let myChart = this.$echarts.init(document.getElementById('img3'))\r\n        //指定图表的配置项和数据\r\n        var option = {\r\n          //标题\r\n          title: {\r\n            text: '考试通过率折线图',\r\n            x: 'center'\r\n          },\r\n          //x轴\r\n          xAxis: {\r\n            data: this.examNames\r\n          },\r\n          //y轴没有显式设置，根据值自动生成y轴\r\n          yAxis: {},\r\n          //数据-data是最终要显示的数据\r\n          series: [{\r\n            name: '通过率',\r\n            type: 'line',\r\n            areaStyle: {\r\n              normal: {}\r\n            },\r\n            data: this.passRate\r\n          }],\r\n        }\r\n        //使用刚刚指定的配置项和数据项显示图表\r\n        myChart.setOption(option)\r\n      },\r\n      \r\n      drawImg4 () {\r\n        let myChart = this.$echarts.init(document.getElementById('img4'))\r\n        myChart.setOption({\r\n          color: [\"#cd5c5c\"],\r\n          textStyle: {\r\n            color: 'black'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: \"{a} <br/>{b} : {c}\"\r\n          },\r\n\r\n          grid: {\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            boundaryGap: [0, 0.01],\r\n            axisLine:{\r\n              lineStyle:{\r\n                color:'#fff'\r\n              },\r\n            },\r\n            \"axisLabel\": {\r\n              \"interval\": 0,\r\n              fontSize: 18,\r\n              formatter: '{value}',\r\n            }\r\n          },\r\n          yAxis: {\r\n            axisLine:{\r\n              lineStyle:{\r\n                color:'#fff'\r\n              },\r\n            },\r\n            \"axisLabel\": {\r\n              \"interval\": 0,\r\n              fontSize: 18,\r\n            },\r\n            type: 'category',\r\n            data: this.examNames\r\n          },\r\n          series: [{\r\n            name: '通过率：',\r\n            type: 'bar',\r\n            data: this.passRate,\r\n          }]\r\n        })\r\n      }\r\n\r\n    }\r\n    \r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n  .el-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .el-container {\r\n    animation: leftMoveIn .7s ease-in;\r\n  }\r\n\r\n  @keyframes leftMoveIn {\r\n    0% {\r\n      transform: translateX(-100%);\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      transform: translateX(0%);\r\n      opacity: 1;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}